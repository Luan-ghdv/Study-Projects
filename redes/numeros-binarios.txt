Sistema binário: 0 e 1, bit (binary digit)

Sistema decimal: base 10
Ex: 4731
1 = 1 x 1
3 = 3 x 10
7 = 7 x 100
4 = 4 x 1000

1 dígito hexa = 4 bits
---------------------------------------------------------------------------
Zeros à esquerda são irrelevantes e não têm qualquer efeito. Também se aplica a outras bases numéricas como binário e hexadecimal.

Preenchimento (padding): Normalmente queremos "casar" o número de bits dos dados com o número de bits do campo que será usado para transportá-los.
---------------------------------------------------------------------------
Overflow (OF): O dado a ser transportado ou armazenado tem uma quantidade de bits maior do que a estrutura de dados. Temos algumas soluções para esse problema, as quatro mais comuns:
1. Fragmentação de dados;
2. Erro de overflow (OF);
3. Desconsiderar os bits que não "cabem";
4. Somar os bits que não "cabem" aos demais.
---------------------------------------------------------------------------
Bases numéricas: Base 10 (decimal), Base 2 (binário), Base 16 (hexadecimal)

Binário para decimal
10101100 - para converter para decimal começando da direita para a esquerda, multiplcar os números por multiplos de 2, ex: 128, 64, 32, 16, 8, 4, 2, 1
Depois é só somar os valores que são 1, ex: 128 + 32 + 8 + 4 = 172 
---------------------------------------------------------------------------
Decimal para binário
512 = 1000000000

Da mesma forma que binário para decimal usando os multiplos de 2. Porém deve se parar no primeiro multiplo que é maior que o valor da conversão.

79 = 1001111
4648 = 1001000101000
---------------------------------------------------------------------------
Binário para hexadecimal

Com quatro bits podemos representar números de 0 a 15 (decimal) ou 0 a f (hexadecimal).

Por exemplo, é mais fácil escrever 3C27 do que 11110000100111.

1100 = 12
11101010010 = 752

Números hexadecimais são de 0 a F, sendo a até f equivalentes a 10, 11, 12, 13, 14, 15 e 16. Para a conversão é necessário fazer uma separação de quatro em quatro números do valor a ser convertido da direita para a esquerda, soma e juntar os números.
---------------------------------------------------------------------------
Hexadecimal para binário

0x4A3 (O 0x significa que o número está em hexadecimal)

4 = 8 4 2 1 = 0100
A = 8 4 2 1 = 1010
3 = 8 4 2 1 = 0011
RESULTADO 010010100011

F19H (O h significa que o número está em hexadecimal)

F = 8 4 2 1 = 1111
1 = 8 4 2 1 = 0001
9 = 8 4 2 1 = 1001
---------------------------------------------------------------------------
Hexadecimal para decimal

2C9h

Similar ao decimal, porém ao invés de usar potências de 2 usa a de 16.

2 = 16 elevado a 0 = 256
C = 16 elevado a 1 = 16
9 = 16 elevado a 0 = 1

Agora devemos multiplicar pela casa em que o número estiver:
1 x 9 = 9
16 x 12 = 192
256 x 2 = 512

No final é só somar os valores:
9 + 192 + 512 = 713

1B40h
0 = 16 elevado a 0 = 1
4 = 16 elevado a 1 = 16
B = 16 elevado a 2 = 256
1 = 16 elevado a 3 = 4096

1 x 0 = 0
16 x 4 = 64
256 x 11 = 2816
4096 x 1 = 4096

1 + 64 + 2816 + 4096 = 6977
---------------------------------------------------------------------------